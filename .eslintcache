[{"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\index.js":"1","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\reportWebVitals.js":"2","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\App.js":"3","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\pages\\SignIn.js":"4","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\PrivateRoute.js":"5","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\pages\\Home.js":"6","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\PublicRoute.js":"7","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\Header.js":"8","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\misc\\firebase.js":"9","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\SignInButtons.js":"10","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\context\\profile.context.js":"11","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\ResponsiveDrawer.js":"12","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\misc\\custom-hooks.js":"13","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\Dashboard.js":"14","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\EditableInput.js":"15","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\ProviderBlock.js":"16","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\AvatarUpload.js":"17","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\AvatarProfile.js":"18","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\misc\\helpers.js":"19","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\CreateRoom.js":"20","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\rooms\\ChatRoomList.js":"21","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\rooms\\RoomItems.js":"22","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\context\\rooms.context.js":"23","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\rooms\\Chat.js":"24","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\messages\\index.js":"25","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\top\\index.js":"26","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\bottom\\index.js":"27","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\context\\current-room.context.js":"28","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\top\\RoomInfoBtnModal.js":"29","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\messages\\MessageItem.js":"30","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\messages\\ProfileInfoBtnModal.js":"31","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\PresenceDot.js":"32","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\top\\EditRoomModal.js":"33","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\messages\\IconBtnControl.js":"34","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\top\\ChatName.js":"35","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\bottom\\AttachmentBtnModal.js":"36"},{"size":857,"mtime":1614317306772,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":499162500000,"results":"39","hashOfConfig":"38"},{"size":565,"mtime":1612498730758,"results":"40","hashOfConfig":"38"},{"size":850,"mtime":1612502308335,"results":"41","hashOfConfig":"38"},{"size":692,"mtime":1612500610986,"results":"42","hashOfConfig":"38"},{"size":1148,"mtime":1614317268067,"results":"43","hashOfConfig":"38"},{"size":685,"mtime":1612501015016,"results":"44","hashOfConfig":"38"},{"size":713,"mtime":1612502312439,"results":"45","hashOfConfig":"38"},{"size":666,"mtime":1612680449489,"results":"46","hashOfConfig":"38"},{"size":2945,"mtime":1612609091516,"results":"47","hashOfConfig":"38"},{"size":2238,"mtime":1613801803932,"results":"48","hashOfConfig":"38"},{"size":5802,"mtime":1614317169412,"results":"49","hashOfConfig":"38"},{"size":1485,"mtime":1614317260609,"results":"50","hashOfConfig":"38"},{"size":1896,"mtime":1613733619188,"results":"51","hashOfConfig":"38"},{"size":1994,"mtime":1613800480223,"results":"52","hashOfConfig":"38"},{"size":2804,"mtime":1612609092580,"results":"53","hashOfConfig":"38"},{"size":4561,"mtime":1613733754729,"results":"54","hashOfConfig":"38"},{"size":533,"mtime":1613796279239,"results":"55","hashOfConfig":"38"},{"size":1520,"mtime":1614327321415,"results":"56","hashOfConfig":"38"},{"size":3817,"mtime":1613801053160,"results":"57","hashOfConfig":"38"},{"size":1405,"mtime":1613456366797,"results":"58","hashOfConfig":"38"},{"size":1704,"mtime":1613732746210,"results":"59","hashOfConfig":"38"},{"size":743,"mtime":1613375514335,"results":"60","hashOfConfig":"38"},{"size":2205,"mtime":1614317247305,"results":"61","hashOfConfig":"38"},{"size":3686,"mtime":1614327940097,"results":"62","hashOfConfig":"38"},{"size":1917,"mtime":1614317236827,"results":"63","hashOfConfig":"38"},{"size":2430,"mtime":1614325344488,"results":"64","hashOfConfig":"38"},{"size":410,"mtime":1613727945036,"results":"65","hashOfConfig":"38"},{"size":1442,"mtime":1614317360133,"results":"66","hashOfConfig":"38"},{"size":2986,"mtime":1614320873429,"results":"67","hashOfConfig":"38"},{"size":1823,"mtime":1613804358326,"results":"68","hashOfConfig":"38"},{"size":2324,"mtime":1614317161880,"results":"69","hashOfConfig":"38"},{"size":2570,"mtime":1614317351336,"results":"70","hashOfConfig":"38"},{"size":1461,"mtime":1614320646996,"results":"71","hashOfConfig":"38"},{"size":1632,"mtime":1614317339627,"results":"72","hashOfConfig":"38"},{"size":2969,"mtime":1614325218770,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1aby33c",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"76"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"76"},"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\index.js",[],["156","157"],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\reportWebVitals.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\App.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\pages\\SignIn.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\PrivateRoute.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\pages\\Home.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\PublicRoute.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\Header.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\misc\\firebase.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\SignInButtons.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\context\\profile.context.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\ResponsiveDrawer.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\misc\\custom-hooks.js",["158"],"import { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { database } from \"./firebase\";\r\n\r\nexport function useModalState(defaultValue = false) {\r\n  const [isOpen, setIsOpen] = useState(defaultValue);\r\n\r\n  const open = useCallback(() => setIsOpen(true), []);\r\n  const close = useCallback(() => setIsOpen(false), []);\r\n\r\n  return {\r\n    isOpen,\r\n    open,\r\n    close,\r\n  };\r\n}\r\n\r\nexport function usePresence(uid) {\r\n  const [presence, setPresence] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const userStatusRef = database.ref(`status/${uid}`);\r\n\r\n    userStatusRef.on(\"value\", (snap) => {\r\n      if (snap.exists()) {\r\n        const data = snap.val();\r\n        setPresence(data);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      userStatusRef.off();\r\n    };\r\n  }, [uid]);\r\n  return presence;\r\n}\r\n\r\nexport function useHover() {\r\n  const [value, setValue] = useState(false);\r\n\r\n  const ref = useRef(null);\r\n\r\n  const handleMouseOver = () => setValue(true);\r\n  const handleMouseOut = () => setValue(false);\r\n\r\n  useEffect(\r\n    () => {\r\n      const node = ref.current;\r\n      if (node) {\r\n        node.addEventListener(\"mouseover\", handleMouseOver);\r\n        node.addEventListener(\"mouseout\", handleMouseOut);\r\n      }\r\n      return () => {\r\n        node.removeEventListener(\"mouseover\", handleMouseOver);\r\n        node.removeEventListener(\"mouseout\", handleMouseOut);\r\n      };\r\n    },\r\n    [ref.current] // Recall only if ref changes\r\n  );\r\n\r\n  return [ref, value];\r\n}\r\n","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\Dashboard.js",["159"],"import { Badge, Button, Divider, makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useProfile } from \"../context/profile.context\";\r\nimport { database } from \"../misc/firebase\";\r\nimport AvatarUpload from \"./AvatarUpload\";\r\nimport EditableInput from \"./EditableInput\";\r\nimport ProviderBlock from \"./ProviderBlock\";\r\nimport { getUserUpdates } from \"../misc/helpers\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: \"70%\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    borderRadius: 10,\r\n    padding: theme.spacing(2, 4, 3),\r\n    fontSize: 30,\r\n    textAlign: \"center\",\r\n  },\r\n  input: {\r\n    margin: \"1em auto\",\r\n  },\r\n  setMargin: {\r\n    margin: \"1.5em auto 1em\",\r\n  },\r\n}));\r\n\r\nconst Dashboard = ({ onSignOut }) => {\r\n  const classes = useStyles();\r\n  const { profile } = useProfile();\r\n  const onSave = async (newData) => {\r\n    try {\r\n      const updates = await getUserUpdates(\r\n        profile.uid,\r\n        \"name\",\r\n        newData,\r\n        database\r\n      );\r\n\r\n      await database.ref().update(updates);\r\n\r\n      alert(\"Nickname has been updated\");\r\n    } catch (err) {\r\n      alert(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.paper}>\r\n      <h5>Dashboard</h5>\r\n      <div>\r\n        <AvatarUpload />\r\n        <div className={classes.input}>\r\n          <EditableInput\r\n            name=\"nickname\"\r\n            initialValue={profile.name}\r\n            onSave={onSave}\r\n            label={\"Nickname\"}\r\n          />\r\n        </div>\r\n        <Divider className={classes.setMargin} />\r\n      </div>\r\n      <ProviderBlock />\r\n      <div className={classes.setMargin}>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={onSignOut}>\r\n          Sign out\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\EditableInput.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\ProviderBlock.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\AvatarUpload.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\AvatarProfile.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\misc\\helpers.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\CreateRoom.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\rooms\\ChatRoomList.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\rooms\\RoomItems.js",["160","161","162"],"import {\r\n  ListItem,\r\n  ListItemText,\r\n  makeStyles,\r\n  MenuItem,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport TimeAgo from \"timeago-react\";\r\nimport AvatarProfile from \"../AvatarProfile\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // flexGrow: 1,\r\n    // padding: theme.spacing(3),\r\n  },\r\n  content: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  time: {\r\n    fontSize: \"0.9em\",\r\n    color: \"gray\",\r\n  },\r\n  roomname: { margin: 0 },\r\n  message: {\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  text: {\r\n    fontSize: \"1em\",\r\n  },\r\n  name: {\r\n    fontStyle: \"italic\",\r\n  },\r\n}));\r\n\r\nconst RoomItems = ({ room }) => {\r\n  const classes = useStyles();\r\n\r\n  const { createdAt, name, lastMessage } = room;\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.content}>\r\n        <h3 className={classes.roomname}>{name}</h3>\r\n        <TimeAgo\r\n          className={classes.time}\r\n          datetime={\r\n            lastMessage ? new Date(lastMessage.createdAt) : new Date(createdAt)\r\n          }\r\n        />\r\n      </div>\r\n      {lastMessage ? (\r\n        <>\r\n          <div>\r\n            <AvatarProfile\r\n              src={lastMessage.author.avatar}\r\n              name={lastMessage.author.name}\r\n              className={classes.profile}\r\n            />\r\n          </div>\r\n          <Typography className={classes.name}>\r\n            {lastMessage.author.name}\r\n          </Typography>\r\n          <span>{lastMessage.text}</span>\r\n        </>\r\n      ) : (\r\n        <ListItemText className={classes.text}>No messages yet...</ListItemText>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoomItems;\r\n","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\context\\rooms.context.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\rooms\\Chat.js",["163","164","165"],"import {\r\n  Backdrop,\r\n  CircularProgress,\r\n  Grid,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Messages from \"../chat-window/messages\";\r\nimport ChatTop from \"../chat-window/top\";\r\nimport ChatBottom from \"../chat-window/bottom\";\r\nimport { faFileExcel } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faColumns } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useParams } from \"react-router\";\r\nimport { useRooms } from \"../../context/rooms.context\";\r\nimport { CurrentRoomProvider } from \"../../context/current-room.context\";\r\nimport { transformToArr } from \"../../misc/helpers\";\r\nimport { auth } from \"../../misc/firebase\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  messages: {\r\n    width: \"100%\",\r\n    height: \"600px\",\r\n    textAlign: \"center\",\r\n  },\r\n  bottom: {\r\n    position: \"fixed\",\r\n    display: \"inline-block\",\r\n    marginTop: \"100%\",\r\n    bottom: 0,\r\n    width: \"100%\",\r\n  },\r\n  notfound: {\r\n    textAlign: \"center\",\r\n  },\r\n  contentWrapper: {\r\n    width: \"85%\",\r\n    margin: \"auto\",\r\n  },\r\n}));\r\n\r\nconst Chat = () => {\r\n  const classes = useStyles();\r\n\r\n  const { chatId } = useParams();\r\n\r\n  const rooms = useRooms();\r\n\r\n  if (!rooms) {\r\n    return (\r\n      <Backdrop>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    );\r\n  }\r\n\r\n  const currentRoom = rooms.find((room) => room.id === chatId);\r\n\r\n  if (!currentRoom) {\r\n    return <h6 className={classes.notfound}> Chat {chatId} not found </h6>;\r\n  }\r\n\r\n  const { name, description } = currentRoom;\r\n\r\n  const admins = transformToArr(currentRoom.admins);\r\n  const isAdmin = admins.includes(auth.currentUser.uid);\r\n\r\n  const currentRoomData = {\r\n    name,\r\n    description,\r\n    admins,\r\n    isAdmin,\r\n  };\r\n\r\n  return (\r\n    <CurrentRoomProvider data={currentRoomData}>\r\n      <Grid container direction=\"column\">\r\n        <Grid item xs={12} md={12} lg={12}>\r\n          <div className={classes.messages}>\r\n            <Messages />\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12} md={12} lg={12}>\r\n          <ChatBottom />\r\n        </Grid>\r\n      </Grid>\r\n    </CurrentRoomProvider>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\messages\\index.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\top\\index.js",["166"],"import React, { memo } from \"react\";\r\nimport { Button, makeStyles, Modal, Typography } from \"@material-ui/core\";\r\nimport { useCurrentRoom } from \"../../../context/current-room.context\";\r\nimport EditRoomModal from \"./EditRoomModal\";\r\nimport RoomInfoBtnModal from \"./RoomInfoBtnModal\";\r\nimport { useModalState } from \"../../../misc/custom-hooks\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  chatName: {\r\n    textAlign: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: \"70%\",\r\n    border: \"2px solid #000\",\r\n    borderRadius: 10,\r\n    fontSize: 30,\r\n    textAlign: \"center\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  button: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nconst Top = () => {\r\n  const name = useCurrentRoom((v) => v.name);\r\n  const description = useCurrentRoom((v) => v.description);\r\n  const isAdmin = useCurrentRoom((v) => v.isAdmin);\r\n  const { isOpen, close, open } = useModalState();\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant=\"h6\" className={classes.chatName} onClick={open}>\r\n        {name}\r\n      </Typography>\r\n      {/* <Button className={classes.button} onClick={open}>\r\n        Room Info\r\n      </Button> */}\r\n      <Modal open={isOpen} onClose={close} className={classes.modal}>\r\n        <div className={classes.paper}>\r\n          <h5>About \"{name}\"</h5>\r\n          <h6>Description: {description}</h6>\r\n          <Button onClick={close}>close</Button>\r\n        </div>\r\n      </Modal>\r\n      {/* <RoomInfoBtnModal /> */}\r\n      <span>{isAdmin && <EditRoomModal />}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(Top);\r\n","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\bottom\\index.js",["167"],"import { IconButton, InputAdornment, OutlinedInput } from \"@material-ui/core\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport React, { useState } from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport { useProfile } from \"../../../context/profile.context\";\r\nimport { useParams } from \"react-router\";\r\nimport { database } from \"../../../misc/firebase\";\r\nimport AttachmentBtnModal from \"./AttachmentBtnModal\";\r\n\r\nfunction assenbleMessage(profile, chatId) {\r\n  return {\r\n    roomId: chatId,\r\n    author: {\r\n      name: profile.name,\r\n      uid: profile.uid,\r\n      createdAt: profile.createdAt,\r\n      ...(profile.avatar ? { avatar: profile.avatar } : {}),\r\n    },\r\n    createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n    likeCount: 0,\r\n  };\r\n}\r\n\r\nconst Bottom = () => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { profile } = useProfile();\r\n  const { chatId } = useParams();\r\n\r\n  const onInputChange = (event) => {\r\n    setInput(event.target.value);\r\n  };\r\n\r\n  const onSendClick = async () => {\r\n    if (input.trim() === \"\") {\r\n      return;\r\n    }\r\n\r\n    const msgData = assenbleMessage(profile, chatId);\r\n    msgData.text = input;\r\n\r\n    const updates = {};\r\n\r\n    const messageId = database.ref(\"messages\").push().key;\r\n\r\n    updates[`/messages/${messageId}`] = msgData;\r\n    updates[`/rooms/${chatId}/lastMessage`] = {\r\n      ...msgData,\r\n      msgId: messageId,\r\n    };\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      await database.ref().update(updates);\r\n      setInput(\"\");\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      alert(err.message);\r\n    }\r\n  };\r\n\r\n  const onKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      onSendClick();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <OutlinedInput\r\n        fullWidth\r\n        placeholder=\"Write a new message here...\"\r\n        value={input}\r\n        onChange={onInputChange}\r\n        onKeyDown={onKeyDown}\r\n        endAdornment={\r\n          <InputAdornment position=\"end\">\r\n            <IconButton onClick={onSendClick} disabled={isLoading}>\r\n              <SendIcon />\r\n            </IconButton>\r\n          </InputAdornment>\r\n        }\r\n        // startAdornment={\r\n        //   <InputAdornment position=\"start\">\r\n        //     <AttachmentBtnModal />\r\n        //   </InputAdornment>\r\n        // }\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Bottom;\r\n","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\context\\current-room.context.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\top\\RoomInfoBtnModal.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\messages\\MessageItem.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\messages\\ProfileInfoBtnModal.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\PresenceDot.js",["168","169"],"import React from \"react\";\r\nimport { usePresence } from \"../misc/custom-hooks\";\r\nimport { Badge, makeStyles, Tooltip, withStyles } from \"@material-ui/core\";\r\n\r\n// const StyledBadge = (colors) =>\r\n//   withStyles((theme) => ({\r\n//     badge: {\r\n//       backgroundColor: colors,\r\n//       color: colors,\r\n//       boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n//       \"&::after\": {\r\n//         position: \"absolute\",\r\n//         top: 0,\r\n//         left: 0,\r\n//         width: \"100%\",\r\n//         height: \"100%\",\r\n//         borderRadius: \"50%\",\r\n//         animation: \"$ripple 1.2s infinite ease-in-out\",\r\n//         border: \"1px solid currentColor\",\r\n//         content: '\"\"',\r\n//       },\r\n//     },\r\n//     \"@keyframes ripple\": {\r\n//       \"0%\": {\r\n//         transform: \"scale(.8)\",\r\n//         opacity: 1,\r\n//       },\r\n//       \"100%\": {\r\n//         transform: \"scale(2.4)\",\r\n//         opacity: 0,\r\n//       },\r\n//     },\r\n//   }))(Badge);\r\n\r\nconst PresenceDot = ({ children, uid }) => {\r\n  const presence = usePresence(uid);\r\n\r\n  const getColor = (presence) => {\r\n    if (!presence) {\r\n      return \"gray\";\r\n    }\r\n\r\n    switch (presence.state) {\r\n      case \"online\":\r\n        return \"primary\";\r\n      case \"offline\":\r\n        return \"error\";\r\n      default:\r\n        return \"default\";\r\n    }\r\n  };\r\n\r\n  const getText = (presence) => {\r\n    if (!presence) {\r\n      return \"Unknown state\";\r\n    }\r\n    return presence.state === \"online\"\r\n      ? \"Online\"\r\n      : `Last online ${new Date(presence.last_changed).toLocaleDateString()}`;\r\n  };\r\n  const color = getColor(presence);\r\n  // const GreenBadge = StyledBadge(color);\r\n  // console.log(GreenBadge);\r\n\r\n  return (\r\n    <>\r\n      <Tooltip arrow title={getText(presence)} placement=\"top-start\">\r\n        <Badge\r\n          overlap=\"circle\"\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"right\",\r\n          }}\r\n          variant=\"dot\"\r\n          color={color}\r\n        >\r\n          {/* <GreenBadge\r\n          overlap=\"circle\"\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"right\",\r\n          }}\r\n          variant=\"dot\"\r\n        > */}\r\n          {children}\r\n        </Badge>\r\n        {/* </GreenBadge> */}\r\n      </Tooltip>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PresenceDot;\r\n","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\top\\EditRoomModal.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\messages\\IconBtnControl.js",["170"],"import React from \"react\";\r\nimport { Badge, IconButton, makeStyles, Tooltip } from \"@material-ui/core\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport { Fragment } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  time: {\r\n    fontSize: \"0.9em\",\r\n    color: \"gray\",\r\n  },\r\n  iconbtn: {\r\n    padding: 0,\r\n  },\r\n  heart: {\r\n    fontSize: \"1em\",\r\n    \"&:hover\": {\r\n      backGroundcolor: \"#e57373\",\r\n    },\r\n  },\r\n  badge: {\r\n    padding: \"0 4px\",\r\n  },\r\n}));\r\n\r\nconst IconBtnControl = ({\r\n  isLiked,\r\n  onClick,\r\n  badgeContent,\r\n  isVisible,\r\n  tooltip,\r\n  icon,\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Fragment style={{ visibility: isVisible ? \"visible\" : \"hidden\" }}>\r\n      <Tooltip\r\n        className={classes.tooltip}\r\n        arrow\r\n        title={tooltip}\r\n        placement=\"top-start\"\r\n      >\r\n        <Badge\r\n          className={classes.badge}\r\n          badgeContent={badgeContent}\r\n          color=\"secondary\"\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"right\",\r\n          }}\r\n        >\r\n          <IconButton className={classes.iconbtn} onClick={onClick}>\r\n            {/* <FavoriteIcon\r\n              // className={classes.heart}\r\n              style={{ color: { isLiked } ? \"red\" : \"white\" }}\r\n            /> */}\r\n            {icon}\r\n          </IconButton>\r\n        </Badge>\r\n      </Tooltip>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default IconBtnControl;\r\n","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\top\\ChatName.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\bottom\\AttachmentBtnModal.js",["171","172","173"],"import {\r\n  Button,\r\n  IconButton,\r\n  Input,\r\n  makeStyles,\r\n  Modal,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\r\nimport { useModalState } from \"../../../misc/custom-hooks\";\r\nimport { useParams } from \"react-router\";\r\nimport { storage } from \"../../../misc/firebase\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: \"70%\",\r\n    border: \"2px solid #000\",\r\n    borderRadius: 10,\r\n    fontSize: 30,\r\n    textAlign: \"center\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  button: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  warning: {\r\n    fontSize: \"0.5em\",\r\n    color: \"gray\",\r\n    textAlign: \"end\",\r\n  },\r\n}));\r\n\r\nconst MAX_FILE_SIZE = 1000 * 1024 * 5;\r\n\r\nconst AttachmentBtnModal = ({ afterUpload }) => {\r\n  const classes = useStyles();\r\n  const { chatId } = useParams();\r\n  const { isOpen, close, open } = useModalState();\r\n\r\n  const [fileList, setFileList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const onChange = (fileArr) => {\r\n    const filtered = fileArr\r\n      .filter((el) => el.blobFile.size <= MAX_FILE_SIZE)\r\n      .slice(0, 5);\r\n    setFileList(filtered);\r\n  };\r\n\r\n  const onUpload = async () => {\r\n    try {\r\n      const uploadPromises = fileList.map((f) => {\r\n        storage\r\n          .ref(\"/chat/${chatId}\")\r\n          .child(Date.now() + f.name)\r\n          .put(f.blobFile, {\r\n            cacheControl: `public, max-age=${3600 * 24 * 3}`,\r\n          });\r\n      });\r\n\r\n      const uploadSnapshots = await Promise.all(uploadPromises);\r\n\r\n      const shapePromises = uploadSnapshots.map(async (snap) => {\r\n        return {\r\n          contentType: snap.metadata.contentType,\r\n          name: snap.metadata.name,\r\n          url: await snap.ref.getDownloadURL(),\r\n        };\r\n      });\r\n\r\n      const files = await Promise.all(shapePromises);\r\n\r\n      await afterUpload(files);\r\n      setIsLoading(false);\r\n      close();\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      alert(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton onClick={open}>\r\n        <AttachFileIcon />\r\n      </IconButton>\r\n      <Modal className={classes.modal} open={isOpen} onClose={close}>\r\n        <div className={classes.paper}>\r\n          <h5>Upload Files</h5>\r\n          <Input type=\"file\" onChange={onChange} disabled={isLoading}></Input>\r\n          <Button disabled={isLoading} onClick={onUpload} fullWidth>\r\n            Send\r\n          </Button>\r\n          <Typography className={classes.warning}>\r\n            *only files less than 5mb are allowed\r\n          </Typography>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AttachmentBtnModal;\r\n",{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":57,"column":5,"nodeType":"180","endLine":57,"endColumn":18,"suggestions":"181"},{"ruleId":"182","severity":1,"message":"183","line":1,"column":10,"nodeType":"184","messageId":"185","endLine":1,"endColumn":15},{"ruleId":"182","severity":1,"message":"186","line":2,"column":3,"nodeType":"184","messageId":"185","endLine":2,"endColumn":11},{"ruleId":"182","severity":1,"message":"187","line":5,"column":3,"nodeType":"184","messageId":"185","endLine":5,"endColumn":11},{"ruleId":"182","severity":1,"message":"188","line":8,"column":17,"nodeType":"184","messageId":"185","endLine":8,"endColumn":25},{"ruleId":"182","severity":1,"message":"189","line":9,"column":8,"nodeType":"184","messageId":"185","endLine":9,"endColumn":15},{"ruleId":"182","severity":1,"message":"190","line":11,"column":10,"nodeType":"184","messageId":"185","endLine":11,"endColumn":21},{"ruleId":"182","severity":1,"message":"191","line":12,"column":10,"nodeType":"184","messageId":"185","endLine":12,"endColumn":19},{"ruleId":"182","severity":1,"message":"192","line":5,"column":8,"nodeType":"184","messageId":"185","endLine":5,"endColumn":24},{"ruleId":"182","severity":1,"message":"193","line":8,"column":8,"nodeType":"184","messageId":"185","endLine":8,"endColumn":26},{"ruleId":"182","severity":1,"message":"194","line":3,"column":17,"nodeType":"184","messageId":"185","endLine":3,"endColumn":27},{"ruleId":"182","severity":1,"message":"195","line":3,"column":38,"nodeType":"184","messageId":"185","endLine":3,"endColumn":48},{"ruleId":"182","severity":1,"message":"196","line":3,"column":8,"nodeType":"184","messageId":"185","endLine":3,"endColumn":20},{"ruleId":"182","severity":1,"message":"197","line":47,"column":11,"nodeType":"184","messageId":"185","endLine":47,"endColumn":17},{"ruleId":"198","severity":1,"message":"199","line":62,"column":47,"nodeType":"200","messageId":"201","endLine":62,"endColumn":49},{"ruleId":"202","severity":1,"message":"203","line":64,"column":16,"nodeType":"204","messageId":"205","endLine":64,"endColumn":33},"no-native-reassign",["206"],"no-negated-in-lhs",["207"],"react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'ref.current'. Either exclude it or remove the dependency array. Mutable values like 'ref.current' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["208"],"no-unused-vars","'Badge' is defined but never used.","Identifier","unusedVar","'ListItem' is defined but never used.","'MenuItem' is defined but never used.","'useState' is defined but never used.","'ChatTop' is defined but never used.","'faFileExcel' is defined but never used.","'faColumns' is defined but never used.","'RoomInfoBtnModal' is defined but never used.","'AttachmentBtnModal' is defined but never used.","'makeStyles' is defined but never used.","'withStyles' is defined but never used.","'FavoriteIcon' is defined but never used.","'chatId' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-global-assign","no-unsafe-negation",{"desc":"209","fix":"210"},"Update the dependencies array to be: []",{"range":"211","text":"212"},[1405,1418],"[]"]