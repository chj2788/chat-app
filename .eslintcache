[{"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\index.js":"1","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\reportWebVitals.js":"2","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\App.js":"3","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\pages\\SignIn.js":"4","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\PrivateRoute.js":"5","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\pages\\Home.js":"6","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\PublicRoute.js":"7","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\Header.js":"8","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\misc\\firebase.js":"9","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\SignInButtons.js":"10","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\context\\profile.context.js":"11","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\ResponsiveDrawer.js":"12","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\misc\\custom-hooks.js":"13","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\Dashboard.js":"14","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\EditableInput.js":"15","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\ProviderBlock.js":"16","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\AvatarUpload.js":"17","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\AvatarProfile.js":"18","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\misc\\helpers.js":"19","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\CreateRoom.js":"20","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\rooms\\ChatRoomList.js":"21","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\rooms\\RoomItems.js":"22","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\context\\rooms.context.js":"23","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\rooms\\Chat.js":"24","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\messages\\index.js":"25","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\top\\index.js":"26","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\bottom\\index.js":"27","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\context\\current-room.context.js":"28","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\top\\RoomInfoBtnModal.js":"29","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\messages\\MessageItem.js":"30","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\messages\\ProfileInfoBtnModal.js":"31","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\PresenceDot.js":"32","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\top\\EditRoomModal.js":"33"},{"size":857,"mtime":1613742506593,"results":"34","hashOfConfig":"35"},{"size":362,"mtime":499162500000,"results":"36","hashOfConfig":"35"},{"size":565,"mtime":1612498730758,"results":"37","hashOfConfig":"35"},{"size":850,"mtime":1612502308335,"results":"38","hashOfConfig":"35"},{"size":692,"mtime":1612500610986,"results":"39","hashOfConfig":"35"},{"size":1111,"mtime":1613737899767,"results":"40","hashOfConfig":"35"},{"size":685,"mtime":1612501015016,"results":"41","hashOfConfig":"35"},{"size":713,"mtime":1612502312439,"results":"42","hashOfConfig":"35"},{"size":666,"mtime":1612680449489,"results":"43","hashOfConfig":"35"},{"size":2945,"mtime":1612609091516,"results":"44","hashOfConfig":"35"},{"size":2238,"mtime":1613801803932,"results":"45","hashOfConfig":"35"},{"size":5949,"mtime":1613796418468,"results":"46","hashOfConfig":"35"},{"size":804,"mtime":1613738465448,"results":"47","hashOfConfig":"35"},{"size":1896,"mtime":1613733619188,"results":"48","hashOfConfig":"35"},{"size":1994,"mtime":1613800480223,"results":"49","hashOfConfig":"35"},{"size":2804,"mtime":1612609092580,"results":"50","hashOfConfig":"35"},{"size":4561,"mtime":1613733754729,"results":"51","hashOfConfig":"35"},{"size":533,"mtime":1613796279239,"results":"52","hashOfConfig":"35"},{"size":1236,"mtime":1613801912305,"results":"53","hashOfConfig":"35"},{"size":3817,"mtime":1613801053160,"results":"54","hashOfConfig":"35"},{"size":1405,"mtime":1613456366797,"results":"55","hashOfConfig":"35"},{"size":1704,"mtime":1613732746210,"results":"56","hashOfConfig":"35"},{"size":743,"mtime":1613375514335,"results":"57","hashOfConfig":"35"},{"size":2212,"mtime":1613802343244,"results":"58","hashOfConfig":"35"},{"size":1673,"mtime":1613804869230,"results":"59","hashOfConfig":"35"},{"size":510,"mtime":1613802494824,"results":"60","hashOfConfig":"35"},{"size":2308,"mtime":1613731502359,"results":"61","hashOfConfig":"35"},{"size":410,"mtime":1613727945036,"results":"62","hashOfConfig":"35"},{"size":1449,"mtime":1613729155398,"results":"63","hashOfConfig":"35"},{"size":1791,"mtime":1613804492172,"results":"64","hashOfConfig":"35"},{"size":1823,"mtime":1613804358326,"results":"65","hashOfConfig":"35"},{"size":2208,"mtime":1613803557901,"results":"66","hashOfConfig":"35"},{"size":2472,"mtime":1613801593093,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1aby33c",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"70"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\index.js",[],["141","142"],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\reportWebVitals.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\App.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\pages\\SignIn.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\PrivateRoute.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\pages\\Home.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\PublicRoute.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\Header.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\misc\\firebase.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\SignInButtons.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\context\\profile.context.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\ResponsiveDrawer.js",["143","144","145","146","147"],"import React, { useCallback, useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport { Button, Card, Grid, Modal } from \"@material-ui/core\";\r\nimport { useModalState } from \"../misc/custom-hooks\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport { auth, database } from \"../misc/firebase\";\r\nimport CreateRoom from \"./CreateRoom\";\r\nimport ChatRoomList from \"./rooms/ChatRoomList\";\r\nimport Chat from \"./rooms/Chat\";\r\nimport AvatarProfile from \"./AvatarProfile\";\r\nimport { isOfflineForDatabase, useProfile } from \"../context/profile.context\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\n\r\nconst drawerWidth = \"35%\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: \"35%\",\r\n    backgroundColor: \"#212121\",\r\n  },\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n  conversation: {\r\n    margin: \"1em auto\",\r\n    textAlign: \"center\",\r\n    justifyContent: \"center\",\r\n    display: \"flex\",\r\n  },\r\n  buttonGrid: {\r\n    margin: \"1em auto\",\r\n  },\r\n  name: {\r\n    fontSize: \"2em\",\r\n  },\r\n  profile: {\r\n    width: theme.spacing(25),\r\n    height: theme.spacing(25),\r\n    margin: \"0 auto 2em\",\r\n    cursor: \"pointer\",\r\n    // opacity: 0.2,\r\n    \"&:hover\": {\r\n      // cursor: \"pointer\",\r\n      opacity: 0.2,\r\n    },\r\n  },\r\n  flexy: {\r\n    display: \"flex\",\r\n  },\r\n}));\r\n\r\nfunction ResponsiveDrawer() {\r\n  const classes = useStyles();\r\n  const [opening, setOpening] = useState(false);\r\n  const { profile } = useProfile();\r\n  const handleDrawerOpen = () => {\r\n    setOpening(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpening(false);\r\n  };\r\n\r\n  const { isOpen, open, close } = useModalState();\r\n\r\n  const onSignOut = useCallback(() => {\r\n    database\r\n      .ref(`/status/${auth.currentUser.uid}`)\r\n      .set(isOfflineForDatabase)\r\n      .then(() => {\r\n        auth.signOut();\r\n        alert(\"Signed out\");\r\n        close();\r\n      })\r\n      .catch((err) => {\r\n        alert(err.message);\r\n      });\r\n  }, [close]);\r\n\r\n  const drawer = (\r\n    <div>\r\n      {/* <div className={classes.toolbar} /> */}\r\n      <Divider />\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        className={classes.buttonGrid}\r\n      >\r\n        <p className={classes.name}>Hey, {profile.name}</p>\r\n\r\n        <AvatarProfile\r\n          className={classes.profile}\r\n          src={profile.avatar}\r\n          name={profile.name}\r\n          onClick={open}\r\n        />\r\n\r\n        <Modal open={isOpen} onClose={close} className={classes.modal}>\r\n          <Dashboard onSignOut={onSignOut} />\r\n        </Modal>\r\n      </Grid>\r\n      <Divider />\r\n      <Typography variant=\"h6\" className={classes.conversation}>\r\n        CONVERSATIONS\r\n      </Typography>\r\n      <CreateRoom className=\"classes.flexy\" />\r\n      <ChatRoomList />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: opening,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, opening && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Responsive drawer\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={opening}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        {drawer}\r\n      </Drawer>\r\n\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResponsiveDrawer;\r\n","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\misc\\custom-hooks.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\Dashboard.js",["148"],"import { Badge, Button, Divider, makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useProfile } from \"../context/profile.context\";\r\nimport { database } from \"../misc/firebase\";\r\nimport AvatarUpload from \"./AvatarUpload\";\r\nimport EditableInput from \"./EditableInput\";\r\nimport ProviderBlock from \"./ProviderBlock\";\r\nimport { getUserUpdates } from \"../misc/helpers\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: \"70%\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    borderRadius: 10,\r\n    padding: theme.spacing(2, 4, 3),\r\n    fontSize: 30,\r\n    textAlign: \"center\",\r\n  },\r\n  input: {\r\n    margin: \"1em auto\",\r\n  },\r\n  setMargin: {\r\n    margin: \"1.5em auto 1em\",\r\n  },\r\n}));\r\n\r\nconst Dashboard = ({ onSignOut }) => {\r\n  const classes = useStyles();\r\n  const { profile } = useProfile();\r\n  const onSave = async (newData) => {\r\n    try {\r\n      const updates = await getUserUpdates(\r\n        profile.uid,\r\n        \"name\",\r\n        newData,\r\n        database\r\n      );\r\n\r\n      await database.ref().update(updates);\r\n\r\n      alert(\"Nickname has been updated\");\r\n    } catch (err) {\r\n      alert(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.paper}>\r\n      <h5>Dashboard</h5>\r\n      <div>\r\n        <AvatarUpload />\r\n        <div className={classes.input}>\r\n          <EditableInput\r\n            name=\"nickname\"\r\n            initialValue={profile.name}\r\n            onSave={onSave}\r\n            label={\"Nickname\"}\r\n          />\r\n        </div>\r\n        <Divider className={classes.setMargin} />\r\n      </div>\r\n      <ProviderBlock />\r\n      <div className={classes.setMargin}>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={onSignOut}>\r\n          Sign out\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\EditableInput.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\ProviderBlock.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\AvatarUpload.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\AvatarProfile.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\misc\\helpers.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\CreateRoom.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\rooms\\ChatRoomList.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\rooms\\RoomItems.js",["149","150","151"],"import {\r\n  ListItem,\r\n  ListItemText,\r\n  makeStyles,\r\n  MenuItem,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport TimeAgo from \"timeago-react\";\r\nimport AvatarProfile from \"../AvatarProfile\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // flexGrow: 1,\r\n    // padding: theme.spacing(3),\r\n  },\r\n  content: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  time: {\r\n    fontSize: \"0.9em\",\r\n    color: \"gray\",\r\n  },\r\n  roomname: { margin: 0 },\r\n  message: {\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  text: {\r\n    fontSize: \"1em\",\r\n  },\r\n  name: {\r\n    fontStyle: \"italic\",\r\n  },\r\n}));\r\n\r\nconst RoomItems = ({ room }) => {\r\n  const classes = useStyles();\r\n\r\n  const { createdAt, name, lastMessage } = room;\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.content}>\r\n        <h3 className={classes.roomname}>{name}</h3>\r\n        <TimeAgo\r\n          className={classes.time}\r\n          datetime={\r\n            lastMessage ? new Date(lastMessage.createdAt) : new Date(createdAt)\r\n          }\r\n        />\r\n      </div>\r\n      {lastMessage ? (\r\n        <>\r\n          <div>\r\n            <AvatarProfile\r\n              src={lastMessage.author.avatar}\r\n              name={lastMessage.author.name}\r\n              className={classes.profile}\r\n            />\r\n          </div>\r\n          <Typography className={classes.name}>\r\n            {lastMessage.author.name}\r\n          </Typography>\r\n          <span>{lastMessage.text}</span>\r\n        </>\r\n      ) : (\r\n        <ListItemText className={classes.text}>No messages yet...</ListItemText>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoomItems;\r\n","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\context\\rooms.context.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\rooms\\Chat.js",["152","153"],"import {\r\n  Backdrop,\r\n  CircularProgress,\r\n  Grid,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Messages from \"../chat-window/messages\";\r\nimport ChatTop from \"../chat-window/top\";\r\nimport ChatBottom from \"../chat-window/bottom\";\r\nimport { faFileExcel } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faColumns } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useParams } from \"react-router\";\r\nimport { useRooms } from \"../../context/rooms.context\";\r\nimport { CurrentRoomProvider } from \"../../context/current-room.context\";\r\nimport { transformToArr } from \"../../misc/helpers\";\r\nimport { auth } from \"../../misc/firebase\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  messages: {\r\n    width: \"100%\",\r\n    height: \"600px\",\r\n    textAlign: \"center\",\r\n  },\r\n  bottom: {\r\n    position: \"fixed\",\r\n    display: \"inline-block\",\r\n    marginTop: \"100%\",\r\n    bottom: 0,\r\n    width: \"100%\",\r\n  },\r\n  notfound: {\r\n    textAlign: \"center\",\r\n  },\r\n}));\r\n\r\nconst Chat = () => {\r\n  const classes = useStyles();\r\n\r\n  const { chatId } = useParams();\r\n\r\n  const rooms = useRooms();\r\n\r\n  if (!rooms) {\r\n    return (\r\n      <Backdrop>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    );\r\n  }\r\n\r\n  const currentRoom = rooms.find((room) => room.id === chatId);\r\n\r\n  if (!currentRoom) {\r\n    return <h6 className={classes.notfound}> Chat {chatId} not found </h6>;\r\n  }\r\n\r\n  const { name, description } = currentRoom;\r\n\r\n  const admins = transformToArr(currentRoom.admins);\r\n  const isAdmin = admins.includes(auth.currentUser.uid);\r\n\r\n  const currentRoomData = {\r\n    name,\r\n    description,\r\n    admins,\r\n    isAdmin,\r\n  };\r\n\r\n  return (\r\n    <CurrentRoomProvider data={currentRoomData}>\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        <Grid item xs={12}>\r\n          <ChatTop />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <div className={classes.messages}>\r\n            <Messages />\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <ChatBottom />\r\n        </Grid>\r\n      </Grid>\r\n    </CurrentRoomProvider>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\messages\\index.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\top\\index.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\bottom\\index.js",["154"],"import {\r\n  FormControl,\r\n  IconButton,\r\n  InputAdornment,\r\n  OutlinedInput,\r\n} from \"@material-ui/core\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport { useProfile } from \"../../../context/profile.context\";\r\nimport { useParams } from \"react-router\";\r\nimport { database } from \"../../../misc/firebase\";\r\n\r\nfunction assenbleMessage(profile, chatId) {\r\n  return {\r\n    roomId: chatId,\r\n    author: {\r\n      name: profile.name,\r\n      uid: profile.uid,\r\n      createdAt: profile.createdAt,\r\n      ...(profile.avatar ? { avatar: profile.avatar } : {}),\r\n    },\r\n    createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n  };\r\n}\r\n\r\nconst Bottom = () => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { profile } = useProfile();\r\n  const { chatId } = useParams();\r\n\r\n  const onInputChange = (event) => {\r\n    setInput(event.target.value);\r\n  };\r\n\r\n  const onSendClick = async () => {\r\n    if (input.trim() === \"\") {\r\n      return;\r\n    }\r\n\r\n    const msgData = assenbleMessage(profile, chatId);\r\n    msgData.text = input;\r\n\r\n    const updates = {};\r\n\r\n    const messageId = database.ref(\"messages\").push().key;\r\n\r\n    updates[`/messages/${messageId}`] = msgData;\r\n    updates[`/rooms/${chatId}/lastMessage`] = {\r\n      ...msgData,\r\n      msgId: messageId,\r\n    };\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      await database.ref().update(updates);\r\n      setInput(\"\");\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      alert(err.message);\r\n    }\r\n  };\r\n\r\n  const onKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      onSendClick();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl variant=\"outlined\">\r\n        <OutlinedInput\r\n          placeholder=\"Write a new message here...\"\r\n          value={input}\r\n          onChange={onInputChange}\r\n          onKeyDown={onKeyDown}\r\n          endAdornment={\r\n            <InputAdornment position=\"end\">\r\n              <IconButton onClick={onSendClick} disabled={isLoading}>\r\n                <SendIcon />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n      </FormControl>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bottom;\r\n","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\context\\current-room.context.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\top\\RoomInfoBtnModal.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\messages\\MessageItem.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\messages\\ProfileInfoBtnModal.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\PresenceDot.js",["155","156"],"import React, { memo } from \"react\";\r\nimport { usePresence } from \"../misc/custom-hooks\";\r\nimport { Badge, makeStyles, Tooltip, withStyles } from \"@material-ui/core\";\r\n\r\nconst getColor = (presence) => {\r\n  if (!presence) {\r\n    return \"gray\";\r\n  }\r\n\r\n  switch (presence.state) {\r\n    case \"online\":\r\n      return \"green\";\r\n    case \"offline\":\r\n      return \"red\";\r\n    default:\r\n      return \"gray\";\r\n  }\r\n};\r\n\r\nconst getText = (presence) => {\r\n  if (!presence) {\r\n    return \"Unknown state\";\r\n  }\r\n  return presence.state === \"online\"\r\n    ? \"Online\"\r\n    : `Last online ${new Date(presence.last_changed).toLocaleDateString()}`;\r\n};\r\n\r\nconst StyledBadge = (colors) =>\r\n  withStyles((theme) => ({\r\n    badge: {\r\n      backgroundColor: colors,\r\n      color: colors,\r\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n      \"&::after\": {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        borderRadius: \"50%\",\r\n        animation: \"$ripple 1.2s infinite ease-in-out\",\r\n        border: \"1px solid currentColor\",\r\n        content: '\"\"',\r\n      },\r\n    },\r\n    \"@keyframes ripple\": {\r\n      \"0%\": {\r\n        transform: \"scale(.8)\",\r\n        opacity: 1,\r\n      },\r\n      \"100%\": {\r\n        transform: \"scale(2.4)\",\r\n        opacity: 0,\r\n      },\r\n    },\r\n  }))(Badge);\r\n\r\nconst PresenceDot = ({ children, uid }) => {\r\n  const presence = usePresence(uid);\r\n  const color = getColor(presence);\r\n  const GreenBadge = StyledBadge(color);\r\n  // console.log(GreenBadge);\r\n\r\n  return (\r\n    <>\r\n      <Tooltip arrow title={getText(presence)} placement=\"top-start\">\r\n        {/* <Badge\r\n          overlap=\"circle\"\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"right\",\r\n          }}\r\n          variant=\"dot\"\r\n          color={getColor(presence)}\r\n        > */}\r\n        <GreenBadge\r\n          overlap=\"circle\"\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"right\",\r\n          }}\r\n          variant=\"dot\"\r\n        >\r\n          {children}\r\n          {/* </Badge> */}\r\n        </GreenBadge>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PresenceDot;\r\n","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\top\\EditRoomModal.js",[],{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":10,"column":22,"nodeType":"163","messageId":"164","endLine":10,"endColumn":30},{"ruleId":"161","severity":1,"message":"165","line":12,"column":10,"nodeType":"163","messageId":"164","endLine":12,"endColumn":16},{"ruleId":"161","severity":1,"message":"166","line":12,"column":18,"nodeType":"163","messageId":"164","endLine":12,"endColumn":22},{"ruleId":"161","severity":1,"message":"167","line":18,"column":8,"nodeType":"163","messageId":"164","endLine":18,"endColumn":12},{"ruleId":"161","severity":1,"message":"168","line":22,"column":8,"nodeType":"163","messageId":"164","endLine":22,"endColumn":24},{"ruleId":"161","severity":1,"message":"169","line":1,"column":10,"nodeType":"163","messageId":"164","endLine":1,"endColumn":15},{"ruleId":"161","severity":1,"message":"170","line":2,"column":3,"nodeType":"163","messageId":"164","endLine":2,"endColumn":11},{"ruleId":"161","severity":1,"message":"171","line":5,"column":3,"nodeType":"163","messageId":"164","endLine":5,"endColumn":11},{"ruleId":"161","severity":1,"message":"172","line":8,"column":17,"nodeType":"163","messageId":"164","endLine":8,"endColumn":25},{"ruleId":"161","severity":1,"message":"173","line":11,"column":10,"nodeType":"163","messageId":"164","endLine":11,"endColumn":21},{"ruleId":"161","severity":1,"message":"174","line":12,"column":10,"nodeType":"163","messageId":"164","endLine":12,"endColumn":19},{"ruleId":"161","severity":1,"message":"175","line":8,"column":17,"nodeType":"163","messageId":"164","endLine":8,"endColumn":28},{"ruleId":"161","severity":1,"message":"176","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":21},{"ruleId":"161","severity":1,"message":"177","line":3,"column":17,"nodeType":"163","messageId":"164","endLine":3,"endColumn":27},"no-native-reassign",["178"],"no-negated-in-lhs",["179"],"no-unused-vars","'useTheme' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Card' is defined but never used.","'Chat' is defined but never used.","'ChevronRightIcon' is defined but never used.","'Badge' is defined but never used.","'ListItem' is defined but never used.","'MenuItem' is defined but never used.","'useState' is defined but never used.","'faFileExcel' is defined but never used.","'faColumns' is defined but never used.","'useCallback' is defined but never used.","'memo' is defined but never used.","'makeStyles' is defined but never used.","no-global-assign","no-unsafe-negation"]