[{"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\index.js":"1","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\reportWebVitals.js":"2","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\App.js":"3","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\pages\\SignIn.js":"4","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\PrivateRoute.js":"5","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\pages\\Home.js":"6","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\PublicRoute.js":"7","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\Header.js":"8","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\misc\\firebase.js":"9","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\SignInButtons.js":"10","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\context\\profile.context.js":"11","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\ResponsiveDrawer.js":"12","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\misc\\custom-hooks.js":"13","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\Dashboard.js":"14","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\EditableInput.js":"15","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\ProviderBlock.js":"16","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\AvatarUpload.js":"17","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\AvatarProfile.js":"18","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\misc\\helpers.js":"19","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\CreateRoom.js":"20","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\rooms\\ChatRoomList.js":"21","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\rooms\\RoomItems.js":"22","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\context\\rooms.context.js":"23","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\rooms\\Chat.js":"24","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\messages\\index.js":"25","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\top\\index.js":"26","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\bottom\\index.js":"27","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\context\\current-room.context.js":"28","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\top\\RoomInfoBtnModal.js":"29","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\messages\\MessageItem.js":"30","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\messages\\ProfileInfoBtnModal.js":"31","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\PresenceDot.js":"32","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\top\\EditRoomModal.js":"33","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\messages\\IconBtnControl.js":"34","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\top\\ChatName.js":"35","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\bottom\\AttachmentBtnModal.js":"36"},{"size":857,"mtime":1614317306772,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":499162500000,"results":"39","hashOfConfig":"38"},{"size":565,"mtime":1612498730758,"results":"40","hashOfConfig":"38"},{"size":850,"mtime":1612502308335,"results":"41","hashOfConfig":"38"},{"size":692,"mtime":1612500610986,"results":"42","hashOfConfig":"38"},{"size":1438,"mtime":1614506416855,"results":"43","hashOfConfig":"38"},{"size":685,"mtime":1612501015016,"results":"44","hashOfConfig":"38"},{"size":713,"mtime":1612502312439,"results":"45","hashOfConfig":"38"},{"size":666,"mtime":1612680449489,"results":"46","hashOfConfig":"38"},{"size":3328,"mtime":1614328808611,"results":"47","hashOfConfig":"38"},{"size":2238,"mtime":1613801803932,"results":"48","hashOfConfig":"38"},{"size":6540,"mtime":1614507031273,"results":"49","hashOfConfig":"38"},{"size":1546,"mtime":1614329432847,"results":"50","hashOfConfig":"38"},{"size":1896,"mtime":1613733619188,"results":"51","hashOfConfig":"38"},{"size":1994,"mtime":1613800480223,"results":"52","hashOfConfig":"38"},{"size":2804,"mtime":1612609092580,"results":"53","hashOfConfig":"38"},{"size":4554,"mtime":1614343072222,"results":"54","hashOfConfig":"38"},{"size":533,"mtime":1613796279239,"results":"55","hashOfConfig":"38"},{"size":1520,"mtime":1614327321415,"results":"56","hashOfConfig":"38"},{"size":3741,"mtime":1614501811686,"results":"57","hashOfConfig":"38"},{"size":1405,"mtime":1613456366797,"results":"58","hashOfConfig":"38"},{"size":1704,"mtime":1613732746210,"results":"59","hashOfConfig":"38"},{"size":743,"mtime":1613375514335,"results":"60","hashOfConfig":"38"},{"size":2173,"mtime":1614507730674,"results":"61","hashOfConfig":"38"},{"size":4082,"mtime":1614500285218,"results":"62","hashOfConfig":"38"},{"size":2108,"mtime":1614501301224,"results":"63","hashOfConfig":"38"},{"size":2430,"mtime":1614507672953,"results":"64","hashOfConfig":"38"},{"size":410,"mtime":1613727945036,"results":"65","hashOfConfig":"38"},{"size":1442,"mtime":1614317360133,"results":"66","hashOfConfig":"38"},{"size":3055,"mtime":1614500763867,"results":"67","hashOfConfig":"38"},{"size":1823,"mtime":1613804358326,"results":"68","hashOfConfig":"38"},{"size":2324,"mtime":1614317161880,"results":"69","hashOfConfig":"38"},{"size":2570,"mtime":1614317351336,"results":"70","hashOfConfig":"38"},{"size":1348,"mtime":1614492232628,"results":"71","hashOfConfig":"38"},{"size":1632,"mtime":1614317339627,"results":"72","hashOfConfig":"38"},{"size":3272,"mtime":1614342815276,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1aby33c",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"76"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"76"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\index.js",[],["156","157"],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\reportWebVitals.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\App.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\pages\\SignIn.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\PrivateRoute.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\pages\\Home.js",["158"],"import React from \"react\";\r\nimport { Grid, makeStyles } from \"@material-ui/core\";\r\nimport ResponsiveDrawer from \"../components/ResponsiveDrawer\";\r\nimport { RoomsProvider } from \"../context/rooms.context\";\r\nimport Chat from \"../components/rooms/Chat\";\r\nimport { Switch, Route, useRouteMatch } from \"react-router\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: \"#212121\",\r\n    display: \"flex\",\r\n    // backgroundSize: \"100%\",\r\n  },\r\n});\r\n\r\nconst Home = () => {\r\n  const classes = useStyles();\r\n  // const { isExact } = useRouteMatch();\r\n  return (\r\n    <RoomsProvider>\r\n      <div className={classes.root}>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"stretch\"\r\n        >\r\n          <Switch>\r\n            <Route exact path=\"/chat/:chatId\">\r\n              <Grid item xs={12} className={classes.drawer}>\r\n                <ResponsiveDrawer />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Chat />\r\n              </Grid>\r\n            </Route>\r\n            <Route>\r\n              <Grid item xs={12} className={classes.drawer}>\r\n                <ResponsiveDrawer />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <h6>Please select chat</h6>\r\n              </Grid>\r\n            </Route>\r\n          </Switch>\r\n        </Grid>\r\n      </div>\r\n    </RoomsProvider>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\PublicRoute.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\Header.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\misc\\firebase.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\SignInButtons.js",["159","160","161"],"import { Button, Grid, makeStyles, Container } from \"@material-ui/core\";\r\nimport firebase from \"firebase/app\";\r\nimport { auth, database } from \"../misc/firebase\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport GTranslateIcon from \"@material-ui/icons/GTranslate\";\r\nimport {\r\n  faFacebook,\r\n  faFacebookF,\r\n  faGoogle,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n// import { Alert } from \"@material-ui/lab\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst useStyles = makeStyles({\r\n  loginButtonFB: {\r\n    backgroundColor: \"#3b5998\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#8b9dc3\",\r\n    },\r\n    color: \"#ffffff\",\r\n    borderRadius: \"5px\",\r\n    padding: \"1% 20%\",\r\n    margin: \"1em auto\",\r\n  },\r\n  loginButtonGG: {\r\n    backgroundColor: \"#db4437\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#ff7762\",\r\n    },\r\n    color: \"#ffffff\",\r\n    borderRadius: \"5px\",\r\n    padding: \"1% 20%\",\r\n    margin: \"1em auto\",\r\n  },\r\n  container: {\r\n    textAlign: \"center\",\r\n  },\r\n  title: {\r\n    fontSize: \"3em\",\r\n    color: \"#ffffff\",\r\n  },\r\n  text: {\r\n    color: \"#757575\",\r\n    margin: \"5% auto\",\r\n  },\r\n});\r\n\r\nconst SignInButtons = () => {\r\n  const classes = useStyles();\r\n\r\n  // function logInAlert(message) {\r\n  //   return (\r\n  //     <div>\r\n  //       <Alert severity=\"success\">{message}</Alert>\r\n  //     </div>\r\n  //   );\r\n  // }\r\n\r\n  const signInWithProvider = async (provider) => {\r\n    try {\r\n      const { additionalUserInfo, user } = await auth.signInWithPopup(provider);\r\n\r\n      if (additionalUserInfo.isNewUser) {\r\n        await database.ref(`/profiles/${user.uid}`).set({\r\n          name: user.displayName,\r\n          createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n        });\r\n      }\r\n      alert(\"Signed In!\");\r\n      // logInAlert(\"signed in!\");\r\n      // alert(\"success!\");\r\n    } catch (err) {\r\n      // <Alert severity=\"error\">{err.message}</Alert>;\r\n      // <Alert variant=\"filled\" severity=\"error\">\r\n      //   This is an error alert — check it out!\r\n      // </Alert>;\r\n      alert(err.message);\r\n    }\r\n  };\r\n\r\n  const onFBSignIn = () => {\r\n    signInWithProvider(new firebase.auth.FacebookAuthProvider());\r\n  };\r\n  const onGGSignIn = () => {\r\n    signInWithProvider(new firebase.auth.GoogleAuthProvider());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container className={classes.container}>\r\n        <h1 className={classes.title}>\r\n          Welcome to <br />\r\n          MyChat\r\n        </h1>\r\n        <p className={classes.text}>Please log in using user credentials</p>\r\n        <Grid container direction=\"column\">\r\n          <Button\r\n            className={classes.loginButtonFB}\r\n            variant=\"contained\"\r\n            onClick={onFBSignIn}\r\n            fullWidth\r\n          >\r\n            <FontAwesomeIcon\r\n              icon={faFacebookF}\r\n              style={{ margin: \"auto 1em\" }}\r\n            />\r\n            Continue with Facebook\r\n          </Button>\r\n          <Button\r\n            className={classes.loginButtonGG}\r\n            variant=\"contained\"\r\n            onClick={onGGSignIn}\r\n            fullWidth\r\n          >\r\n            <FontAwesomeIcon icon={faGoogle} style={{ margin: \"auto 1em\" }} />\r\n            Continue with Google\r\n          </Button>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignInButtons;\r\n","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\context\\profile.context.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\ResponsiveDrawer.js",["162"],"import React, { useCallback, useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport { Grid, Modal, Tooltip } from \"@material-ui/core\";\r\nimport { useModalState } from \"../misc/custom-hooks\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport { auth, database } from \"../misc/firebase\";\r\nimport CreateRoom from \"./CreateRoom\";\r\nimport ChatRoomList from \"./rooms/ChatRoomList\";\r\nimport AvatarProfile from \"./AvatarProfile\";\r\nimport { isOfflineForDatabase, useProfile } from \"../context/profile.context\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChatName from \"./chat-window/top/ChatName\";\r\nimport Chat from \"./rooms/Chat\";\r\n\r\nconst drawerWidth = \"35%\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: drawerWidth,\r\n    },\r\n    flexShrink: 0,\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth})`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: drawerWidth,\r\n    },\r\n    backgroundColor: \"#212121\",\r\n  },\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n  conversation: {\r\n    margin: \"1em auto\",\r\n    textAlign: \"center\",\r\n    justifyContent: \"center\",\r\n    display: \"flex\",\r\n  },\r\n  buttonGrid: {\r\n    margin: \"1em auto\",\r\n  },\r\n  name: {\r\n    fontSize: \"2em\",\r\n  },\r\n  profile: {\r\n    width: theme.spacing(25),\r\n    height: theme.spacing(25),\r\n    margin: \"0 auto 2em\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      opacity: 0.2,\r\n    },\r\n  },\r\n  flexy: {\r\n    display: \"flex\",\r\n  },\r\n}));\r\n\r\nfunction ResponsiveDrawer() {\r\n  const classes = useStyles();\r\n  const [opening, setOpening] = useState(false);\r\n  const { profile } = useProfile();\r\n  const handleDrawerOpen = () => {\r\n    setOpening(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpening(false);\r\n  };\r\n\r\n  const { isOpen, open, close } = useModalState();\r\n\r\n  const onSignOut = useCallback(() => {\r\n    database\r\n      .ref(`/status/${auth.currentUser.uid}`)\r\n      .set(isOfflineForDatabase)\r\n      .then(() => {\r\n        auth.signOut();\r\n        alert(\"Signed out\");\r\n        close();\r\n      })\r\n      .catch((err) => {\r\n        alert(err.message);\r\n      });\r\n  }, [close]);\r\n\r\n  const drawer = (\r\n    <div>\r\n      {/* <div className={classes.toolbar} /> */}\r\n      <Divider />\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        className={classes.buttonGrid}\r\n      >\r\n        <p className={classes.name}>Hey, {profile.name}</p>\r\n        <Tooltip\r\n          arrow\r\n          title={\"Click to edit your profile\"}\r\n          placement=\"top-start\"\r\n        >\r\n          <div onClick={open}>\r\n            <AvatarProfile\r\n              className={classes.profile}\r\n              src={profile.avatar}\r\n              name={profile.name}\r\n            />\r\n          </div>\r\n        </Tooltip>\r\n        <Modal open={isOpen} onClose={close} className={classes.modal}>\r\n          <Dashboard onSignOut={onSignOut} />\r\n        </Modal>\r\n      </Grid>\r\n      <Divider />\r\n      <Typography variant=\"h6\" className={classes.conversation}>\r\n        CONVERSATIONS\r\n      </Typography>\r\n      <CreateRoom className=\"classes.flexy\" />\r\n      <ChatRoomList />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: opening,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, opening && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <ChatName />\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={opening}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        {drawer}\r\n      </Drawer>\r\n\r\n      {/* <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: opening,\r\n        })}\r\n      > */}\r\n      <div className={classes.drawerHeader} />\r\n      {/* <Chat /> */}\r\n      {/* </main> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResponsiveDrawer;\r\n","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\misc\\custom-hooks.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\Dashboard.js",["163"],"import { Badge, Button, Divider, makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useProfile } from \"../context/profile.context\";\r\nimport { database } from \"../misc/firebase\";\r\nimport AvatarUpload from \"./AvatarUpload\";\r\nimport EditableInput from \"./EditableInput\";\r\nimport ProviderBlock from \"./ProviderBlock\";\r\nimport { getUserUpdates } from \"../misc/helpers\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: \"70%\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    borderRadius: 10,\r\n    padding: theme.spacing(2, 4, 3),\r\n    fontSize: 30,\r\n    textAlign: \"center\",\r\n  },\r\n  input: {\r\n    margin: \"1em auto\",\r\n  },\r\n  setMargin: {\r\n    margin: \"1.5em auto 1em\",\r\n  },\r\n}));\r\n\r\nconst Dashboard = ({ onSignOut }) => {\r\n  const classes = useStyles();\r\n  const { profile } = useProfile();\r\n  const onSave = async (newData) => {\r\n    try {\r\n      const updates = await getUserUpdates(\r\n        profile.uid,\r\n        \"name\",\r\n        newData,\r\n        database\r\n      );\r\n\r\n      await database.ref().update(updates);\r\n\r\n      alert(\"Nickname has been updated\");\r\n    } catch (err) {\r\n      alert(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.paper}>\r\n      <h5>Dashboard</h5>\r\n      <div>\r\n        <AvatarUpload />\r\n        <div className={classes.input}>\r\n          <EditableInput\r\n            name=\"nickname\"\r\n            initialValue={profile.name}\r\n            onSave={onSave}\r\n            label={\"Nickname\"}\r\n          />\r\n        </div>\r\n        <Divider className={classes.setMargin} />\r\n      </div>\r\n      <ProviderBlock />\r\n      <div className={classes.setMargin}>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={onSignOut}>\r\n          Sign out\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\EditableInput.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\ProviderBlock.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\AvatarUpload.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\AvatarProfile.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\misc\\helpers.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\CreateRoom.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\rooms\\ChatRoomList.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\rooms\\RoomItems.js",["164","165","166"],"import {\r\n  ListItem,\r\n  ListItemText,\r\n  makeStyles,\r\n  MenuItem,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport TimeAgo from \"timeago-react\";\r\nimport AvatarProfile from \"../AvatarProfile\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // flexGrow: 1,\r\n    // padding: theme.spacing(3),\r\n  },\r\n  content: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  time: {\r\n    fontSize: \"0.9em\",\r\n    color: \"gray\",\r\n  },\r\n  roomname: { margin: 0 },\r\n  message: {\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  text: {\r\n    fontSize: \"1em\",\r\n  },\r\n  name: {\r\n    fontStyle: \"italic\",\r\n  },\r\n}));\r\n\r\nconst RoomItems = ({ room }) => {\r\n  const classes = useStyles();\r\n\r\n  const { createdAt, name, lastMessage } = room;\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.content}>\r\n        <h3 className={classes.roomname}>{name}</h3>\r\n        <TimeAgo\r\n          className={classes.time}\r\n          datetime={\r\n            lastMessage ? new Date(lastMessage.createdAt) : new Date(createdAt)\r\n          }\r\n        />\r\n      </div>\r\n      {lastMessage ? (\r\n        <>\r\n          <div>\r\n            <AvatarProfile\r\n              src={lastMessage.author.avatar}\r\n              name={lastMessage.author.name}\r\n              className={classes.profile}\r\n            />\r\n          </div>\r\n          <Typography className={classes.name}>\r\n            {lastMessage.author.name}\r\n          </Typography>\r\n          <span>{lastMessage.text}</span>\r\n        </>\r\n      ) : (\r\n        <ListItemText className={classes.text}>No messages yet...</ListItemText>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoomItems;\r\n","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\context\\rooms.context.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\rooms\\Chat.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\messages\\index.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\top\\index.js",["167"],"import React, { memo } from \"react\";\r\nimport {\r\n  Button,\r\n  makeStyles,\r\n  Modal,\r\n  Tooltip,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useCurrentRoom } from \"../../../context/current-room.context\";\r\nimport EditRoomModal from \"./EditRoomModal\";\r\nimport RoomInfoBtnModal from \"./RoomInfoBtnModal\";\r\nimport { useModalState } from \"../../../misc/custom-hooks\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexGrow: 1,\r\n  },\r\n  chatName: {\r\n    textAlign: \"center\",\r\n    justifyContent: \"center\",\r\n    cursor: \"help\",\r\n    flexGrow: 1,\r\n  },\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: \"70%\",\r\n    border: \"2px solid #000\",\r\n    borderRadius: 10,\r\n    fontSize: 30,\r\n    textAlign: \"center\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  button: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nconst ChatTop = () => {\r\n  const name = useCurrentRoom((v) => v.name);\r\n  const description = useCurrentRoom((v) => v.description);\r\n  const isAdmin = useCurrentRoom((v) => v.isAdmin);\r\n  const { isOpen, close, open } = useModalState();\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Tooltip arrow title={\"Click to see room info\"} placement=\"top-start\">\r\n        <Typography variant=\"h6\" className={classes.chatName} onClick={open}>\r\n          {name}\r\n        </Typography>\r\n      </Tooltip>\r\n      {/* <Button className={classes.button} onClick={open}>\r\n        Room Info\r\n      </Button> */}\r\n      <Modal open={isOpen} onClose={close} className={classes.modal}>\r\n        <div className={classes.paper}>\r\n          <h5>About \"{name}\"</h5>\r\n          <h6>Description: {description}</h6>\r\n          <Button onClick={close}>close</Button>\r\n        </div>\r\n      </Modal>\r\n      {/* <RoomInfoBtnModal /> */}\r\n      <div>{isAdmin && <EditRoomModal />}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(ChatTop);\r\n","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\bottom\\index.js",["168"],"import { IconButton, InputAdornment, OutlinedInput } from \"@material-ui/core\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport React, { useState } from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport { useProfile } from \"../../../context/profile.context\";\r\nimport { useParams } from \"react-router\";\r\nimport { database } from \"../../../misc/firebase\";\r\nimport AttachmentBtnModal from \"./AttachmentBtnModal\";\r\n\r\nfunction assenbleMessage(profile, chatId) {\r\n  return {\r\n    roomId: chatId,\r\n    author: {\r\n      name: profile.name,\r\n      uid: profile.uid,\r\n      createdAt: profile.createdAt,\r\n      ...(profile.avatar ? { avatar: profile.avatar } : {}),\r\n    },\r\n    createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n    likeCount: 0,\r\n  };\r\n}\r\n\r\nconst Bottom = () => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { profile } = useProfile();\r\n  const { chatId } = useParams();\r\n\r\n  const onInputChange = (event) => {\r\n    setInput(event.target.value);\r\n  };\r\n\r\n  const onSendClick = async () => {\r\n    if (input.trim() === \"\") {\r\n      return;\r\n    }\r\n\r\n    const msgData = assenbleMessage(profile, chatId);\r\n    msgData.text = input;\r\n\r\n    const updates = {};\r\n\r\n    const messageId = database.ref(\"messages\").push().key;\r\n\r\n    updates[`/messages/${messageId}`] = msgData;\r\n    updates[`/rooms/${chatId}/lastMessage`] = {\r\n      ...msgData,\r\n      msgId: messageId,\r\n    };\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      await database.ref().update(updates);\r\n      setInput(\"\");\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      alert(err.message);\r\n    }\r\n  };\r\n\r\n  const onKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      onSendClick();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <OutlinedInput\r\n        fullWidth\r\n        placeholder=\"Write a new message here...\"\r\n        value={input}\r\n        onChange={onInputChange}\r\n        onKeyDown={onKeyDown}\r\n        endAdornment={\r\n          <InputAdornment position=\"end\">\r\n            <IconButton onClick={onSendClick} disabled={isLoading}>\r\n              <SendIcon />\r\n            </IconButton>\r\n          </InputAdornment>\r\n        }\r\n        // startAdornment={\r\n        //   <InputAdornment position=\"start\">\r\n        //     <AttachmentBtnModal />\r\n        //   </InputAdornment>\r\n        // }\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Bottom;\r\n","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\context\\current-room.context.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\top\\RoomInfoBtnModal.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\messages\\MessageItem.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\messages\\ProfileInfoBtnModal.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\PresenceDot.js",["169","170"],"import React from \"react\";\r\nimport { usePresence } from \"../misc/custom-hooks\";\r\nimport { Badge, makeStyles, Tooltip, withStyles } from \"@material-ui/core\";\r\n\r\n// const StyledBadge = (colors) =>\r\n//   withStyles((theme) => ({\r\n//     badge: {\r\n//       backgroundColor: colors,\r\n//       color: colors,\r\n//       boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n//       \"&::after\": {\r\n//         position: \"absolute\",\r\n//         top: 0,\r\n//         left: 0,\r\n//         width: \"100%\",\r\n//         height: \"100%\",\r\n//         borderRadius: \"50%\",\r\n//         animation: \"$ripple 1.2s infinite ease-in-out\",\r\n//         border: \"1px solid currentColor\",\r\n//         content: '\"\"',\r\n//       },\r\n//     },\r\n//     \"@keyframes ripple\": {\r\n//       \"0%\": {\r\n//         transform: \"scale(.8)\",\r\n//         opacity: 1,\r\n//       },\r\n//       \"100%\": {\r\n//         transform: \"scale(2.4)\",\r\n//         opacity: 0,\r\n//       },\r\n//     },\r\n//   }))(Badge);\r\n\r\nconst PresenceDot = ({ children, uid }) => {\r\n  const presence = usePresence(uid);\r\n\r\n  const getColor = (presence) => {\r\n    if (!presence) {\r\n      return \"gray\";\r\n    }\r\n\r\n    switch (presence.state) {\r\n      case \"online\":\r\n        return \"primary\";\r\n      case \"offline\":\r\n        return \"error\";\r\n      default:\r\n        return \"default\";\r\n    }\r\n  };\r\n\r\n  const getText = (presence) => {\r\n    if (!presence) {\r\n      return \"Unknown state\";\r\n    }\r\n    return presence.state === \"online\"\r\n      ? \"Online\"\r\n      : `Last online ${new Date(presence.last_changed).toLocaleDateString()}`;\r\n  };\r\n  const color = getColor(presence);\r\n  // const GreenBadge = StyledBadge(color);\r\n  // console.log(GreenBadge);\r\n\r\n  return (\r\n    <>\r\n      <Tooltip arrow title={getText(presence)} placement=\"top-start\">\r\n        <Badge\r\n          overlap=\"circle\"\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"right\",\r\n          }}\r\n          variant=\"dot\"\r\n          color={color}\r\n        >\r\n          {/* <GreenBadge\r\n          overlap=\"circle\"\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"right\",\r\n          }}\r\n          variant=\"dot\"\r\n        > */}\r\n          {children}\r\n        </Badge>\r\n        {/* </GreenBadge> */}\r\n      </Tooltip>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PresenceDot;\r\n","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\top\\EditRoomModal.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\messages\\IconBtnControl.js",["171"],"import React from \"react\";\r\nimport { Badge, IconButton, makeStyles, Tooltip } from \"@material-ui/core\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport { Fragment } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  time: {\r\n    fontSize: \"0.9em\",\r\n    color: \"gray\",\r\n  },\r\n  iconbtn: {\r\n    padding: 0,\r\n  },\r\n  heart: {\r\n    fontSize: \"1em\",\r\n    \"&:hover\": {\r\n      backGroundcolor: \"#e57373\",\r\n    },\r\n  },\r\n  badge: {\r\n    padding: \"0 4px\",\r\n  },\r\n}));\r\n\r\nconst IconBtnControl = ({ onClick, badgeContent, tooltip, icon }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Tooltip\r\n        className={classes.tooltip}\r\n        arrow\r\n        title={tooltip}\r\n        placement=\"top-start\"\r\n      >\r\n        <Badge\r\n          className={classes.badge}\r\n          badgeContent={badgeContent}\r\n          color=\"secondary\"\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"right\",\r\n          }}\r\n        >\r\n          <IconButton className={classes.iconbtn} onClick={onClick}>\r\n            {/* <FavoriteIcon\r\n              // className={classes.heart}\r\n              style={{ color: { isLiked } ? \"red\" : \"white\" }}\r\n            /> */}\r\n            {icon}\r\n          </IconButton>\r\n        </Badge>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IconBtnControl;\r\n","C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\top\\ChatName.js",[],"C:\\Users\\Hyunjin\\OneDrive\\바탕 화면\\Projects\\chat-app\\src\\components\\chat-window\\bottom\\AttachmentBtnModal.js",[],{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":6,"column":25,"nodeType":"178","messageId":"179","endLine":6,"endColumn":38},{"ruleId":"176","severity":1,"message":"180","line":4,"column":8,"nodeType":"178","messageId":"179","endLine":4,"endColumn":20},{"ruleId":"176","severity":1,"message":"181","line":5,"column":8,"nodeType":"178","messageId":"179","endLine":5,"endColumn":22},{"ruleId":"176","severity":1,"message":"182","line":7,"column":3,"nodeType":"178","messageId":"179","endLine":7,"endColumn":13},{"ruleId":"176","severity":1,"message":"183","line":22,"column":8,"nodeType":"178","messageId":"179","endLine":22,"endColumn":12},{"ruleId":"176","severity":1,"message":"184","line":1,"column":10,"nodeType":"178","messageId":"179","endLine":1,"endColumn":15},{"ruleId":"176","severity":1,"message":"185","line":2,"column":3,"nodeType":"178","messageId":"179","endLine":2,"endColumn":11},{"ruleId":"176","severity":1,"message":"186","line":5,"column":3,"nodeType":"178","messageId":"179","endLine":5,"endColumn":11},{"ruleId":"176","severity":1,"message":"187","line":8,"column":17,"nodeType":"178","messageId":"179","endLine":8,"endColumn":25},{"ruleId":"176","severity":1,"message":"188","line":11,"column":8,"nodeType":"178","messageId":"179","endLine":11,"endColumn":24},{"ruleId":"176","severity":1,"message":"189","line":8,"column":8,"nodeType":"178","messageId":"179","endLine":8,"endColumn":26},{"ruleId":"176","severity":1,"message":"190","line":3,"column":17,"nodeType":"178","messageId":"179","endLine":3,"endColumn":27},{"ruleId":"176","severity":1,"message":"191","line":3,"column":38,"nodeType":"178","messageId":"179","endLine":3,"endColumn":48},{"ruleId":"176","severity":1,"message":"192","line":3,"column":8,"nodeType":"178","messageId":"179","endLine":3,"endColumn":20},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"no-unused-vars","'useRouteMatch' is defined but never used.","Identifier","unusedVar","'FacebookIcon' is defined but never used.","'GTranslateIcon' is defined but never used.","'faFacebook' is defined but never used.","'Chat' is defined but never used.","'Badge' is defined but never used.","'ListItem' is defined but never used.","'MenuItem' is defined but never used.","'useState' is defined but never used.","'RoomInfoBtnModal' is defined but never used.","'AttachmentBtnModal' is defined but never used.","'makeStyles' is defined but never used.","'withStyles' is defined but never used.","'FavoriteIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]